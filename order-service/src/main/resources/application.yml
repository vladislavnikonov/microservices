server:
  port: 0

spring:
  application:
    name: order-service
  datasource:
    url: jdbc:postgresql://localhost:5432/order-service
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
      database-platform: org.hibernate.dialect.PostgreSQLDialect
  kafka:
    bootstrap-servers: localhost:9092
    template:
      default-topic: notificationTopic
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring:
          json:
            type:
              mapping: event:com.dyoung.orderservice.event.OrderPlacedEvent
  zipkin:
    base-url: http://localhost:9411
  sleuth:
    sampler:
      probability: 1.0

eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_URI:http://localhost:8761/eureka}
  instance:
    hostname: localhost

management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    circuitbreakers:
      enabled: true
  endpoint:
    health:
      show-details: always

resilience4j:
  circuitbreaker:
    instances:
      inventory:
        automaticTransitionFromOpenToHalfOpenEnabled: true
        event-consumer-buffer-size: 10
        registerHealthIndicator: true
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        slidingWindowType: COUNT_BASED
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 5
  retry:
    instances:
      inventory:
        wait-duration: 5s
        max-attempts: 3
  timelimiter:
    instances:
      inventory:
        timeout-duration: 3s

feign:
  circuitbreaker:
    enabled: true
